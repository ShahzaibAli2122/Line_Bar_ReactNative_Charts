{"version":3,"names":["findManifest","folder","manifestPaths","glob","sync","path","join","cwd","ignore","length","mainManifest","filter","manifestPath","includes"],"sources":["../../src/config/findManifest.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport glob from 'glob';\nimport path from 'path';\n\nexport default function findManifest(folder: string) {\n  let manifestPaths = glob.sync(path.join('**', 'AndroidManifest.xml'), {\n    cwd: folder,\n    ignore: [\n      'node_modules/**',\n      '**/build/**',\n      '**/debug/**',\n      'Examples/**',\n      'examples/**',\n      '**/Pods/**',\n      '**/sdks/hermes/android/**',\n      '**/src/androidTest/**',\n      '**/src/test/**',\n    ],\n  });\n  if (manifestPaths.length > 1) {\n    // if we have more than one manifest, pick the one in the main folder if present\n    const mainManifest = manifestPaths.filter((manifestPath) =>\n      manifestPath.includes('src/main/'),\n    );\n    if (mainManifest.length === 1) {\n      manifestPaths = mainManifest;\n    }\n  }\n\n  return manifestPaths[0] ? path.join(folder, manifestPaths[0]) : null;\n}\n"],"mappings":";;;;;;AAQA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAwB;AATxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAKe,SAASA,YAAY,CAACC,MAAc,EAAE;EACnD,IAAIC,aAAa,GAAGC,eAAI,CAACC,IAAI,CAACC,eAAI,CAACC,IAAI,CAAC,IAAI,EAAE,qBAAqB,CAAC,EAAE;IACpEC,GAAG,EAAEN,MAAM;IACXO,MAAM,EAAE,CACN,iBAAiB,EACjB,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,EACb,YAAY,EACZ,2BAA2B,EAC3B,uBAAuB,EACvB,gBAAgB;EAEpB,CAAC,CAAC;EACF,IAAIN,aAAa,CAACO,MAAM,GAAG,CAAC,EAAE;IAC5B;IACA,MAAMC,YAAY,GAAGR,aAAa,CAACS,MAAM,CAAEC,YAAY,IACrDA,YAAY,CAACC,QAAQ,CAAC,WAAW,CAAC,CACnC;IACD,IAAIH,YAAY,CAACD,MAAM,KAAK,CAAC,EAAE;MAC7BP,aAAa,GAAGQ,YAAY;IAC9B;EACF;EAEA,OAAOR,aAAa,CAAC,CAAC,CAAC,GAAGG,eAAI,CAACC,IAAI,CAACL,MAAM,EAAEC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACtE"}