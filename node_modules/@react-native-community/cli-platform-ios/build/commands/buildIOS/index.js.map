{"version":3,"names":["buildIOS","_","ctx","args","xcodeProject","sourceDir","getXcodeProjectAndDir","project","ios","automaticPodsInstallation","forcePods","isAppRunningNewArchitecture","getArchitecture","undefined","resolvePods","root","dependencies","forceInstall","newArchEnabled","process","chdir","scheme","mode","getConfiguration","buildProject","name","description","func","examples","desc","cmd","options","buildOptions"],"sources":["../../../src/commands/buildIOS/index.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {Config} from '@react-native-community/cli-types';\nimport {buildProject} from './buildProject';\nimport {BuildFlags, buildOptions} from './buildOptions';\nimport {getConfiguration} from './getConfiguration';\nimport {getXcodeProjectAndDir} from './getXcodeProjectAndDir';\nimport resolvePods from '../../tools/pods';\nimport getArchitecture from '../../tools/getArchitecture';\n\nasync function buildIOS(_: Array<string>, ctx: Config, args: BuildFlags) {\n  const {xcodeProject, sourceDir} = getXcodeProjectAndDir(ctx.project.ios);\n\n  if (ctx.project.ios?.automaticPodsInstallation || args.forcePods) {\n    const isAppRunningNewArchitecture = ctx.project.ios?.sourceDir\n      ? await getArchitecture(ctx.project.ios?.sourceDir)\n      : undefined;\n\n    await resolvePods(ctx.root, ctx.dependencies, {\n      forceInstall: args.forcePods,\n      newArchEnabled: isAppRunningNewArchitecture,\n    });\n  }\n\n  process.chdir(sourceDir);\n\n  const {scheme, mode} = await getConfiguration(xcodeProject, sourceDir, args);\n\n  return buildProject(xcodeProject, undefined, mode, scheme, args);\n}\n\nexport default {\n  name: 'build-ios',\n  description: 'builds your app for iOS platform',\n  func: buildIOS,\n  examples: [\n    {\n      desc: 'Build the app for all iOS devices in Release mode',\n      cmd: 'npx react-native build-ios --mode \"Release\"',\n    },\n  ],\n  options: buildOptions,\n};\n"],"mappings":";;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AAA0D;AAd1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,eAAeA,QAAQ,CAACC,CAAgB,EAAEC,GAAW,EAAEC,IAAgB,EAAE;EAAA;EACvE,MAAM;IAACC,YAAY;IAAEC;EAAS,CAAC,GAAG,IAAAC,4CAAqB,EAACJ,GAAG,CAACK,OAAO,CAACC,GAAG,CAAC;EAExE,IAAI,qBAAAN,GAAG,CAACK,OAAO,CAACC,GAAG,qDAAf,iBAAiBC,yBAAyB,KAAIN,IAAI,CAACO,SAAS,EAAE;IAAA;IAChE,MAAMC,2BAA2B,GAAG,sBAAAT,GAAG,CAACK,OAAO,CAACC,GAAG,sDAAf,kBAAiBH,SAAS,IAC1D,MAAM,IAAAO,wBAAe,uBAACV,GAAG,CAACK,OAAO,CAACC,GAAG,sDAAf,kBAAiBH,SAAS,CAAC,GACjDQ,SAAS;IAEb,MAAM,IAAAC,aAAW,EAACZ,GAAG,CAACa,IAAI,EAAEb,GAAG,CAACc,YAAY,EAAE;MAC5CC,YAAY,EAAEd,IAAI,CAACO,SAAS;MAC5BQ,cAAc,EAAEP;IAClB,CAAC,CAAC;EACJ;EAEAQ,OAAO,CAACC,KAAK,CAACf,SAAS,CAAC;EAExB,MAAM;IAACgB,MAAM;IAAEC;EAAI,CAAC,GAAG,MAAM,IAAAC,kCAAgB,EAACnB,YAAY,EAAEC,SAAS,EAAEF,IAAI,CAAC;EAE5E,OAAO,IAAAqB,0BAAY,EAACpB,YAAY,EAAES,SAAS,EAAES,IAAI,EAAED,MAAM,EAAElB,IAAI,CAAC;AAClE;AAAC,eAEc;EACbsB,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,kCAAkC;EAC/CC,IAAI,EAAE3B,QAAQ;EACd4B,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,mDAAmD;IACzDC,GAAG,EAAE;EACP,CAAC,CACF;EACDC,OAAO,EAAEC;AACX,CAAC;AAAA"}