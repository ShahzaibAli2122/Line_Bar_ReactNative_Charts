{"version":3,"sources":["util.js"],"names":["PropTypes","util","sortDescending","_array","array","sort","a","b","Constants","gridStyle","position","left","right","height","backgroundColor","commonProps","svg","object","shadowSvg","shadowWidth","number","shadowOffset","style","any","animate","bool","animationDuration","curve","func","contentInset","shape","top","bottom","numberOfTicks","renderGradient","gridMin","gridMax","showGrid","gridProps","commonDefaultProps","strokeColor","strokeWidth","gridStroke","gridWidth"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,cAAc,CAACC,MAAD,EAAS;AACnB,UAAMC,KAAK,GAAG,CAAC,GAAGD,MAAJ,CAAd;AACA,WAAOC,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,UAAID,CAAC,GAAGC,CAAR,EAAW;AACP,eAAO,CAAC,CAAR;AACH;;AACD,UAAIA,CAAC,GAAGD,CAAR,EAAW;AACP,eAAO,CAAP;AACH;;AACD,aAAO,CAAP;AACH,KARM,CAAP;AASH;;AAZQ,CAAb;AAeA,OAAO,MAAME,SAAS,GAAG;AACrBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,IAAI,EAAE,CAFC;AAGPC,IAAAA,KAAK,EAAE,CAHA;AAIPC,IAAAA,MAAM,EAAE,GAJD;AAKPC,IAAAA,eAAe,EAAE;AALV,GADU;AAQrBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,GAAG,EAAEhB,SAAS,CAACiB,MADN;AAETC,IAAAA,SAAS,EAAElB,SAAS,CAACiB,MAFZ;AAGTE,IAAAA,WAAW,EAAEnB,SAAS,CAACoB,MAHd;AAITC,IAAAA,YAAY,EAAErB,SAAS,CAACoB,MAJf;AAMTE,IAAAA,KAAK,EAAEtB,SAAS,CAACuB,GANR;AAQTC,IAAAA,OAAO,EAAExB,SAAS,CAACyB,IARV;AASTC,IAAAA,iBAAiB,EAAE1B,SAAS,CAACoB,MATpB;AAWTO,IAAAA,KAAK,EAAE3B,SAAS,CAAC4B,IAXR;AAYTC,IAAAA,YAAY,EAAE7B,SAAS,CAAC8B,KAAV,CAAgB;AAC1BC,MAAAA,GAAG,EAAE/B,SAAS,CAACoB,MADW;AAE1BT,MAAAA,IAAI,EAAEX,SAAS,CAACoB,MAFU;AAG1BR,MAAAA,KAAK,EAAEZ,SAAS,CAACoB,MAHS;AAI1BY,MAAAA,MAAM,EAAEhC,SAAS,CAACoB;AAJQ,KAAhB,CAZL;AAkBTa,IAAAA,aAAa,EAAEjC,SAAS,CAACoB,MAlBhB;AAoBTc,IAAAA,cAAc,EAAElC,SAAS,CAAC4B,IApBjB;AAsBTO,IAAAA,OAAO,EAAEnC,SAAS,CAACoB,MAtBV;AAuBTgB,IAAAA,OAAO,EAAEpC,SAAS,CAACoB,MAvBV;AAwBTiB,IAAAA,QAAQ,EAAErC,SAAS,CAACyB,IAxBX;AAyBTa,IAAAA,SAAS,EAAEtC,SAAS,CAACiB;AAzBZ,GARQ;AAmCrBsB,EAAAA,kBAAkB,EAAE;AAChBC,IAAAA,WAAW,EAAE,SADG;AAEhBC,IAAAA,WAAW,EAAE,CAFG;AAGhBZ,IAAAA,YAAY,EAAE,EAHE;AAIhBI,IAAAA,aAAa,EAAE,EAJC;AAKhBI,IAAAA,QAAQ,EAAE,IALM;AAMhBF,IAAAA,OAAO,EAAE,CANO;AAOhBC,IAAAA,OAAO,EAAE,CAPO;AAQhBM,IAAAA,UAAU,EAAE,iBARI;AAShBC,IAAAA,SAAS,EAAE;AATK;AAnCC,CAAlB;AAgDP,eAAe1C,IAAf","sourcesContent":["import PropTypes from 'prop-types'\n\nconst util = {\n    sortDescending(_array) {\n        const array = [..._array]\n        return array.sort((a, b) => {\n            if (a > b) {\n                return -1\n            }\n            if (b > a) {\n                return 1\n            }\n            return 0\n        })\n    },\n}\n\nexport const Constants = {\n    gridStyle: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        height: 0.5,\n        backgroundColor: 'rgba(0,0,0,0.2)',\n    },\n    commonProps: {\n        svg: PropTypes.object,\n        shadowSvg: PropTypes.object,\n        shadowWidth: PropTypes.number,\n        shadowOffset: PropTypes.number,\n\n        style: PropTypes.any,\n\n        animate: PropTypes.bool,\n        animationDuration: PropTypes.number,\n\n        curve: PropTypes.func,\n        contentInset: PropTypes.shape({\n            top: PropTypes.number,\n            left: PropTypes.number,\n            right: PropTypes.number,\n            bottom: PropTypes.number,\n        }),\n        numberOfTicks: PropTypes.number,\n\n        renderGradient: PropTypes.func,\n\n        gridMin: PropTypes.number,\n        gridMax: PropTypes.number,\n        showGrid: PropTypes.bool,\n        gridProps: PropTypes.object,\n    },\n    commonDefaultProps: {\n        strokeColor: '#22B6B0',\n        strokeWidth: 2,\n        contentInset: {},\n        numberOfTicks: 10,\n        showGrid: true,\n        gridMin: 0,\n        gridMax: 0,\n        gridStroke: 'rgba(0,0,0,0.2)',\n        gridWidth: 0.5,\n    },\n}\n\nexport default util\n"]}